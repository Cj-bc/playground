* writeLogInAsync
~WriterT~ でログを蓄積している間に非同期例外を受け取った際、
蓄積されている分のログのみをファイルに書き出すなりなんなり
するにはどうすれば良いか？というのを試行錯誤している場所。

~finally~ を使うと、蓄積されたログにはアクセスが出来無いのでダメ。
~backet~ の第一引数(本来リソース確保を行う部分)にて本体を実行し
第二引数(リリース作業を行う部分)にてログの書き出しを行えば出来そうに見えるが、
~bracket~ の作り上第一引数に与えられた関数上は例外がマスクされており
例外で止められないという事態を起こしてしまう。
